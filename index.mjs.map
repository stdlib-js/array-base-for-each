{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'forEach' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils-nary-function';\n* import log from '@stdlib/console-log';\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* forEach( x, naryFunction( log, 1 ) );\n*/\nfunction internal( x, clbk, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tclbk.call( thisArg, x[ i ], i, x );\n\t}\n}\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n* import naryFunction from '@stdlib/utils-nary-function';\n* import log from '@stdlib/console-log';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* accessors( x, naryFunction( log, 1 ) );\n*/\nfunction accessors( x, clbk, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tclbk.call( thisArg, get( data, i ), i, data );\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils-nary-function';\n* import log from '@stdlib/console-log';\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* forEach( x, naryFunction( log, 1 ) );\n*/\nfunction forEach( x, clbk, thisArg ) {\n\tvar obj;\n\tif ( hasMethod( x, 'forEach' ) ) {\n\t\treturn x.forEach( clbk, thisArg );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, clbk, thisArg );\n\t}\n\treturn internal( x, clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n"],"names":["forEach","x","clbk","thisArg","obj","method","hasMethod","arraylike2object","accessorProtocol","data","get","i","accessors","length","call","internal"],"mappings":";;sGA2HA,SAASA,EAASC,EAAGC,EAAMC,GAC1B,IAAIC,EACJ,OAlFD,SAAoBA,EAAKC,GACxB,MAAkC,mBAAlBD,EAAKC,EACtB,CAgFMC,CAAWL,EAAG,WACXA,EAAED,QAASE,EAAMC,IAEzBC,EAAMG,EAAkBN,IACfO,iBAvCV,SAAoBP,EAAGC,EAAMC,GAC5B,IAAIM,EACAC,EACAC,EAKJ,IAHAF,EAAOR,EAAEQ,KACTC,EAAMT,EAAEW,UAAW,GAEbD,EAAI,EAAGA,EAAIF,EAAKI,OAAQF,IAC7BT,EAAKY,KAAMX,EAASO,EAAKD,EAAME,GAAKA,EAAGF,EAEzC,CA6BSG,CAAWR,EAAKF,EAAMC,GAlE/B,SAAmBF,EAAGC,EAAMC,GAC3B,IAAIQ,EACJ,IAAMA,EAAI,EAAGA,EAAIV,EAAEY,OAAQF,IAC1BT,EAAKY,KAAMX,EAASF,EAAGU,GAAKA,EAAGV,EAEjC,CA+DQc,CAAUd,EAAGC,EAAMC,EAC3B"}