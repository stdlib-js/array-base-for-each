{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'forEach' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var log = require( '@stdlib/console-log' );\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* forEach( x, naryFunction( log, 1 ) );\n*/\nfunction internal( x, clbk, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tclbk.call( thisArg, x[ i ], i, x );\n\t}\n}\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var log = require( '@stdlib/console-log' );\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* accessors( x, naryFunction( log, 1 ) );\n*/\nfunction accessors( x, clbk, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tclbk.call( thisArg, get( data, i ), i, data );\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Invokes a callback function once for each array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} clbk - callback function\n* @param {*} thisArg - callback execution context\n* @returns {void}\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var log = require( '@stdlib/console-log' );\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* forEach( x, naryFunction( log, 1 ) );\n*/\nfunction forEach( x, clbk, thisArg ) {\n\tvar obj;\n\tif ( hasMethod( x, 'forEach' ) ) {\n\t\treturn x.forEach( clbk, thisArg );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, clbk, thisArg );\n\t}\n\treturn internal( x, clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nmodule.exports = forEach;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a callback function once for each array element.\n*\n* @module @stdlib/array-base-for-each\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var log = require( '@stdlib/console-log' );\n* var forEach = require( '@stdlib/array-base-for-each' );\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* forEach( x, naryFunction( log, 1 ) );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EAqBtE,SAASC,EAAWC,EAAKC,EAAS,CACjC,OAAS,OAAOD,EAAKC,CAAO,GAAM,UACnC,CAmBA,SAASC,EAAUC,EAAGC,EAAMC,EAAU,CACrC,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAIH,EAAE,OAAQG,IAC1BF,EAAK,KAAMC,EAASF,EAAGG,CAAE,EAAGA,EAAGH,CAAE,CAEnC,CAqBA,SAASI,EAAWJ,EAAGC,EAAMC,EAAU,CACtC,IAAIG,EACAC,EACAH,EAKJ,IAHAE,EAAOL,EAAE,KACTM,EAAMN,EAAE,UAAW,CAAE,EAEfG,EAAI,EAAGA,EAAIE,EAAK,OAAQF,IAC7BF,EAAK,KAAMC,EAASI,EAAKD,EAAMF,CAAE,EAAGA,EAAGE,CAAK,CAE9C,CAsBA,SAASE,EAASP,EAAGC,EAAMC,EAAU,CACpC,IAAIL,EACJ,OAAKD,EAAWI,EAAG,SAAU,EACrBA,EAAE,QAASC,EAAMC,CAAQ,GAEjCL,EAAMF,EAAkBK,CAAE,EACrBH,EAAI,iBACDO,EAAWP,EAAKI,EAAMC,CAAQ,EAE/BH,EAAUC,EAAGC,EAAMC,CAAQ,EACnC,CAKAR,EAAO,QAAUa,ICrGjB,IAAIC,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "arraylike2object", "hasMethod", "obj", "method", "internal", "x", "clbk", "thisArg", "i", "accessors", "data", "get", "forEach", "main"]
}
